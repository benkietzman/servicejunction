// vim: syntax=cpp
// vim600: fdm=marker
/* -*- c++ -*- */
///////////////////////////////////////////
// author     : Ben Kietzman
// begin      : 2012-12-09
// copyright  : kietzman.org
// email      : ben@kietzman.org
///////////////////////////////////////////

/**************************************************************************
*                                                                         *
*   This program is free software; you can redistribute it and/or modify  *
*   it under the terms of the GNU General Public License as published by  *
*   the Free Software Foundation; either version 2 of the License, or     *
*   (at your option) any later version.                                   *
*                                                                         *
**************************************************************************/

#include <curl/curl.h>
#include <iostream>
#include <list>
#include <map>
#include <poll.h>
#include <sstream>
#include <string>
#include <unistd.h>
using namespace std;
#include <Json>
#include <StringManip>
using namespace common;

struct memoryStruct
{
  char *memory;
  size_t size;
};

void dump(const char *text, FILE *stream, unsigned char *ptr, size_t size);
bool fetchPage(string &strUrl, const string strType, map<string, string> auth, const string strCookies, const string strPost, const string strPut, const string strProxy, string &strHeader, string &strContent, string &strError, const string strUserAgent = "", const bool bMobile = false, const bool bFailOnError = true, const bool bDebug = false, const string strCustomRequest = "");
void loadRequest(list<string> &request);
void loadRequest(list<Json *> &request);
void loadRequest(map<string, string> &requestArray, list<string> &request);
void *myrealloc(void *ptr, size_t size);
int mytrace(CURL *handle, curl_infotype type, char *data, size_t size, void *userp);
size_t writeMemoryCallback(void *ptr, size_t size, size_t nmemb, void *data);
